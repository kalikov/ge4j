package org.ge4j.core;

public class MainProc {
    private final Clock clock;
    private final FrameCounter frameCounter;

    public MainProc(Clock clock, FrameCounter frameCounter) {
        this.clock = clock;
        this.frameCounter = frameCounter;
    }

    public void run(long interval) throws InterruptedException {
        long dt;
        // Ensure we have at least 1ms time step to not confuse user's code with 0
        do {
            dt = clock.tick(interval);
        } while (dt < 1);

        if (dt < interval) {
            // If we have a fixed interval and the time for the next frame isn't too close, sleep a bit
            if (dt + 3 < interval) {
                Thread.sleep(1);
            }
        } else {
            frameCounter.increment();
            //_UpdatePowerStatus();

//          if (procFrameFunc()) {
//              break;
//          }
//          if (procRenderFunc) {
//              procRenderFunc();
//          }

            // Clean up input events that were generated by WindowProc and weren't handled by user's code
//                    _ClearQueue();
        }
    }
}
